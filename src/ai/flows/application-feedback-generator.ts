// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates AI-powered feedback on a job application based on the resume and job description.
 *
 * - generateApplicationFeedback - A function that generates feedback on the job application.
 * - GenerateApplicationFeedbackInput - The input type for the generateApplicationFeedback function.
 * - GenerateApplicationFeedbackOutput - The return type for the generateApplicationFeedback function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GenerateApplicationFeedbackInputSchema = z.object({
  resume: z.string().describe('The user\'s resume.'),
  jobDescription: z.string().describe('The job description.'),
});
export type GenerateApplicationFeedbackInput = z.infer<
  typeof GenerateApplicationFeedbackInputSchema
>;

const GenerateApplicationFeedbackOutputSchema = z.object({
  feedback: z.string().describe('AI-powered feedback on the job application.'),
});
export type GenerateApplicationFeedbackOutput = z.infer<
  typeof GenerateApplicationFeedbackOutputSchema
>;

export async function generateApplicationFeedback(
  input: GenerateApplicationFeedbackInput
): Promise<GenerateApplicationFeedbackOutput> {
  return generateApplicationFeedbackFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateApplicationFeedbackPrompt',
  input: {
    schema: z.object({
      resume: z.string().describe('The user\'s resume.'),
      jobDescription: z.string().describe('The job description.'),
    }),
  },
  output: {
    schema: z.object({
      feedback: z.string().describe('AI-powered feedback on the job application.'),
    }),
  },
  prompt: `You are an AI assistant designed to provide feedback on job applications.

  Based on the user's resume and the job description, provide specific and actionable feedback to improve their chances of getting an interview.

  Resume: {{{resume}}}
  Job Description: {{{jobDescription}}}

  Provide feedback in a concise and professional manner.
  `,
});

const generateApplicationFeedbackFlow = ai.defineFlow<
  typeof GenerateApplicationFeedbackInputSchema,
  typeof GenerateApplicationFeedbackOutputSchema
>(
  {
    name: 'generateApplicationFeedbackFlow',
    inputSchema: GenerateApplicationFeedbackInputSchema,
    outputSchema: GenerateApplicationFeedbackOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
